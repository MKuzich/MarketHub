{"version":3,"file":"static/js/125.200eec28.chunk.js","mappings":"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","sources":["data/photos.ts","components/Hero/Hero.tsx","data/currency.ts","components/TopCard/TopCard.tsx","components/SectionTitle/SectionTitle.tsx","components/TopProducts/TopProducts.tsx","components/Categories/Categories.tsx","components/TopDeal/TopDeal.tsx","components/TopDeals/TopDeals.tsx","components/ReviewCard/ReviewCard.tsx","components/CustomersReviews/CustomersReviews.tsx","pages/Home/Home.tsx"],"sourcesContent":["import TempFirst from '../images/temp/temp-1.jpg';\nimport TempSecond from '../images/temp/temp-2.jpg';\n\nexport const photos = [\n  { image: TempFirst, description: 'some description there' },\n  { image: TempSecond, description: 'another description there' },\n];\n","import React from 'react';\nimport { Container } from '@mui/material';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Pagination, Autoplay } from 'swiper';\n\nimport { photos } from '../../data/photos';\n\nexport const Hero: React.FC = () => {\n  return (\n    <section>\n      <Container>\n        <Swiper\n          slidesPerView={1}\n          spaceBetween={30}\n          loop={true}\n          autoplay={{\n            delay: 2500,\n            disableOnInteraction: false,\n          }}\n          pagination={{\n            clickable: true,\n          }}\n          modules={[Pagination, Autoplay]}\n          className=\"mySwiper\"\n        >\n          {photos.map(({ image, description }, idx) => (\n            <SwiperSlide key={'hero-slide' + idx}>\n              <img src={image} alt={description} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </Container>\n    </section>\n  );\n};\n","export const selectedCurrency = { title: 'USD', ratio: 1 };\n","import React from 'react';\nimport { Stack, Box, Typography } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nimport questionImg from '../../images/question.jpg';\nimport { selectedCurrency } from '../../data/currency';\nimport { IProduct } from '../../types/product.type';\n\ntype IProps = {\n  product: IProduct;\n};\n\nexport const TopCard: React.FC<IProps> = ({\n  product: { _id, name, category, images, price, promoPrice },\n}) => {\n  return (\n    <Stack component={Link} to={`products/${_id}`}>\n      <Box\n        sx={{\n          height: '300px',\n          overflow: 'hidden',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <img\n          src={images && images[0]}\n          onError={e => ((e.target as HTMLImageElement).src = questionImg)}\n          alt={name}\n        />\n      </Box>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Stack>\n          <Typography>{name}</Typography>\n          <Typography variant=\"categoryLabel\">{category}</Typography>\n        </Stack>\n        <Stack direction=\"row\" gap={1}>\n          {promoPrice > 0 && (\n            <Typography variant=\"mainPrice\">{`${\n              promoPrice * selectedCurrency.ratio\n            } ${selectedCurrency.title}`}</Typography>\n          )}\n          <Typography variant={promoPrice === 0 ? 'mainPrice' : 'oldPrice'}>\n            {`${price * selectedCurrency.ratio} ${selectedCurrency.title}`}\n          </Typography>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n};\n","import React from 'react';\nimport { Box, Typography } from '@mui/material';\n\ntype IProps = {\n  title: string;\n};\n\nexport const SectionTitle: React.FC<IProps> = ({ title }) => {\n  return (\n    <Box>\n      <Typography variant=\"h2\">{title}</Typography>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { Container } from '@mui/material';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation } from 'swiper';\n\nimport { TopCard } from '../TopCard/TopCard';\nimport { SectionTitle } from '../SectionTitle/SectionTitle';\nimport { IProduct } from '../../types/product.type';\n\ntype IProps = {\n  title: string;\n  products: IProduct[];\n  cardsPerView?: number;\n};\n\nexport const TopProducts: React.FC<IProps> = ({\n  title,\n  products,\n  cardsPerView = 5,\n}) => {\n  return (\n    <section>\n      <Container>\n        <SectionTitle title={title} />\n        <Swiper\n          slidesPerView={cardsPerView}\n          spaceBetween={30}\n          loop={true}\n          navigation={true}\n          modules={[Navigation]}\n          className=\"mySwiper\"\n        >\n          {products.map(product => (\n            <SwiperSlide key={product._id}>\n              <TopCard product={product} />\n            </SwiperSlide>\n          ))}\n        </Swiper>\n      </Container>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Stack, Box, Typography } from '@mui/material';\n\nimport { SectionTitle } from '../SectionTitle/SectionTitle';\n\nimport { useGetAllCategoriesQuery } from '../../redax/categoryApi';\n\nexport const Categories: React.FC = () => {\n  const { data, isSuccess } = useGetAllCategoriesQuery();\n  return (\n    <section>\n      <Container>\n        <SectionTitle title=\"Shop by category\" />\n        <Stack direction=\"row\" flexWrap=\"wrap\" justifyContent=\"center\" gap={3}>\n          {isSuccess &&\n            data.map(({ _id, name, image, tag, desription }) => (\n              <Stack\n                key={'section-cat' + _id}\n                component={Link}\n                to={tag}\n                sx={{\n                  width: '17%',\n                }}\n              >\n                <Box\n                  sx={{\n                    height: '150px',\n                    overflow: 'hidden',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <img src={image} alt={name} />\n                </Box>\n                <Typography variant=\"h3\">{name}</Typography>\n                <Typography>{desription}</Typography>\n              </Stack>\n            ))}\n        </Stack>\n      </Container>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Stack, Box, Typography } from '@mui/material';\n\nimport { IProduct } from '../../types/product.type';\nimport questionImg from '../../images/question.jpg';\nimport { selectedCurrency } from '../../data/currency';\n\ntype IProps = {\n  product: IProduct;\n};\n\nexport const TopDeal: React.FC<IProps> = ({\n  product: { _id, name, category, images, price, promoPrice },\n}) => {\n  return (\n    <Stack component={Link} to={`products/${_id}`}>\n      <Box\n        sx={{\n          overflow: 'hidden',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <img\n          src={images && images[0]}\n          onError={e => ((e.target as HTMLImageElement).src = questionImg)}\n          alt={name}\n        />\n      </Box>\n      <Stack direction=\"row\" justifyContent=\"space-between\">\n        <Stack>\n          <Typography>{name}</Typography>\n          <Typography variant=\"categoryLabel\">{category}</Typography>\n        </Stack>\n        <Stack direction=\"row\" gap={1}>\n          {promoPrice > 0 && (\n            <Typography variant=\"mainPrice\">{`${\n              promoPrice * selectedCurrency.ratio\n            } ${selectedCurrency.title}`}</Typography>\n          )}\n          <Typography variant={promoPrice === 0 ? 'mainPrice' : 'oldPrice'}>\n            {`${price * selectedCurrency.ratio} ${selectedCurrency.title}`}\n          </Typography>\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n};\n","import React from 'react';\nimport { Container, Grid } from '@mui/material';\n\nimport { TopDeal } from '../TopDeal/TopDeal';\nimport { SectionTitle } from '../SectionTitle/SectionTitle';\n\nimport { useGetAllProductsQuery } from '../../redax/productApi';\n\nexport const TopDeals = () => {\n  const { data, isSuccess } = useGetAllProductsQuery();\n  return (\n    <section>\n      <Container>\n        <SectionTitle title=\"Deals of the day\" />\n        {isSuccess && (\n          <Grid container spacing={2}>\n            <Grid item xs={6}>\n              <TopDeal product={data[0]} />\n            </Grid>\n            <Grid item xs={6}>\n              <Grid container spacing={2}>\n                {data.slice(1, 5).map(product => (\n                  <Grid key={product._id} item xs={6}>\n                    <TopDeal product={product} />\n                  </Grid>\n                ))}\n              </Grid>\n            </Grid>\n          </Grid>\n        )}\n      </Container>\n    </section>\n  );\n};\n","import React from 'react';\nimport { Stack, Typography } from '@mui/material';\n\nimport { IReview } from '../../types/review.type';\n\ntype IProps = {\n  review: IReview;\n};\n\nexport const ReviewCard: React.FC<IProps> = ({ review: { text } }) => {\n  return (\n    <Stack>\n      <Typography>{text}</Typography>\n    </Stack>\n  );\n};\n","import React from 'react';\nimport { Container } from '@mui/material';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Navigation, Autoplay } from 'swiper';\n\nimport { SectionTitle } from '../SectionTitle/SectionTitle';\nimport { ReviewCard } from '../ReviewCard/ReviewCard';\n\nimport { useGetAllReviewsQuery } from '../../redax/reviewApi';\n\nexport const CustomersReviews: React.FC = () => {\n  const { data, isSuccess } = useGetAllReviewsQuery();\n  return (\n    <section>\n      <Container>\n        <SectionTitle title=\"Customer Reviews\" />\n        <Swiper\n          slidesPerView={3}\n          spaceBetween={30}\n          loop={true}\n          autoplay={{\n            delay: 10000,\n            disableOnInteraction: false,\n          }}\n          navigation={true}\n          modules={[Navigation, Autoplay]}\n          className=\"mySwiper\"\n        >\n          {isSuccess &&\n            data.map(review => (\n              <SwiperSlide key={review._id}>\n                <ReviewCard review={review} />\n              </SwiperSlide>\n            ))}\n        </Swiper>\n      </Container>\n    </section>\n  );\n};\n","import React from 'react';\n\nimport { Hero } from '../../components/Hero/Hero';\nimport { TopProducts } from '../../components/TopProducts/TopProducts';\nimport { Categories } from '../../components/Categories/Categories';\nimport { TopDeals } from '../../components/TopDeals/TopDeals';\nimport { CustomersReviews } from '../../components/CustomersReviews/CustomersReviews';\n\nimport { useGetAllProductsQuery } from '../../redax/productApi';\n\nconst Home: React.FC = () => {\n  const { data, isSuccess } = useGetAllProductsQuery();\n  return (\n    <>\n      <Hero />\n      <TopProducts\n        title=\"Top products\"\n        products={isSuccess ? data : []}\n        cardsPerView={3}\n      />\n      <TopProducts\n        title=\"New arrivals\"\n        products={isSuccess ? data : []}\n        cardsPerView={7}\n      />\n      <TopProducts\n        title=\"Trending products\"\n        products={isSuccess ? data : []}\n        cardsPerView={5}\n      />\n      <Categories />\n      <TopDeals />\n      <CustomersReviews />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["photos","image","description","Hero","Container","slidesPerView","spaceBetween","loop","autoplay","delay","disableOnInteraction","pagination","clickable","modules","Pagination","Autoplay","className","map","idx","src","alt","selectedCurrency","TopCard","product","_id","name","category","images","price","promoPrice","Stack","component","Link","to","Box","sx","height","overflow","display","alignItems","justifyContent","onError","e","target","questionImg","direction","Typography","variant","gap","SectionTitle","title","TopProducts","products","cardsPerView","navigation","Navigation","Categories","useGetAllCategoriesQuery","data","isSuccess","flexWrap","tag","desription","width","TopDeal","TopDeals","useGetAllProductsQuery","Grid","container","spacing","item","xs","slice","ReviewCard","text","review","CustomersReviews","useGetAllReviewsQuery"],"sourceRoot":""}